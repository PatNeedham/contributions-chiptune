((audioContext,freq,delay)=>{"use strict";const levels={"#1e6823":*(3/2)*4,"#44a340":*(3/2)*3,"#8cc665":*(3/2)*2,"#d6e685":*(3/2),"#eeeeee":freq};const noteBars=([].slice.call(document.getElementsByTagName("g"))).slice(1).map((week)=>{return createOscillators(audioContext,[].slice.call(week.getElementsByClassName("day")))});let i=0;for(let noteBar of noteBars){((j)=>{setTimeout(()=>{for(let node of noteBar){const initColor=node.fill.nodeValue;node.fill.nodeValue="red";node.oscillator.start(0);setTimeout(()=>{node.fill.nodeValue=initColor;node.oscillator.stop()},delay/2)}},delay*j)})(i+=1)}function createOscillators(context,week){return week.map((day)=>{const freq=levels[day.attributes.fill.nodeValue];const oscillator=context.createOscillator();const gainNode=context.createGain();gainNode.gain.value=0.1;oscillator.type="square";oscillator.frequency.value=freq;oscillator.connect(gainNode);gainNode.connect(context.destination);return{fill:day.attributes.fill,oscillator}})}})(new AudioContext,440,100);
